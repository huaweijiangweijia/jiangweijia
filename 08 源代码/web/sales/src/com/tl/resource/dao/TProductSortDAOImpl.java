package com.tl.resource.dao;

import com.tl.resource.business.dto.TreeDto;
import com.tl.resource.dao.pojo.TProductSort;
import com.tl.resource.dao.pojo.TProductSortExample;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class TProductSortDAOImpl extends SqlMapClientDaoSupport implements TProductSortDAO {

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_product_sort
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public TProductSortDAOImpl() {
		super();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_product_sort
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public int countByExample(TProductSortExample example) {
		Integer count = (Integer) getSqlMapClientTemplate().queryForObject(
				"t_product_sort.ibatorgenerated_countByExample", example);
		return count.intValue();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_product_sort
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public int deleteByExample(TProductSortExample example) {
		int rows = getSqlMapClientTemplate().delete(
				"t_product_sort.ibatorgenerated_deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_product_sort
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public int deleteByPrimaryKey(String id) {
		TProductSort key = new TProductSort();
		key.setId(id);
		int rows = getSqlMapClientTemplate().delete(
				"t_product_sort.ibatorgenerated_deleteByPrimaryKey", key);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_product_sort
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public void insert(TProductSort record) {
		getSqlMapClientTemplate().insert(
				"t_product_sort.ibatorgenerated_insert", record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_product_sort
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public void insertSelective(TProductSort record) {
		getSqlMapClientTemplate().insert(
				"t_product_sort.ibatorgenerated_insertSelective", record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_product_sort
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public List selectByExample(TProductSortExample example) {
		List list = getSqlMapClientTemplate().queryForList(
				"t_product_sort.ibatorgenerated_selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_product_sort
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public TProductSort selectByPrimaryKey(String id) {
		TProductSort key = new TProductSort();
		key.setId(id);
		TProductSort record = (TProductSort) getSqlMapClientTemplate()
				.queryForObject(
						"t_product_sort.ibatorgenerated_selectByPrimaryKey",
						key);
		return record;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_product_sort
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public int updateByExampleSelective(TProductSort record,
			TProductSortExample example) {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate().update(
				"t_product_sort.ibatorgenerated_updateByExampleSelective",
				parms);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_product_sort
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public int updateByExample(TProductSort record, TProductSortExample example) {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate().update(
				"t_product_sort.ibatorgenerated_updateByExample", parms);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_product_sort
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public int updateByPrimaryKeySelective(TProductSort record) {
		int rows = getSqlMapClientTemplate().update(
				"t_product_sort.ibatorgenerated_updateByPrimaryKeySelective",
				record);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_product_sort
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public int updateByPrimaryKey(TProductSort record) {
		int rows = getSqlMapClientTemplate().update(
				"t_product_sort.ibatorgenerated_updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table t_product_sort
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	private static class UpdateByExampleParms extends TProductSortExample {
		private Object record;

		public UpdateByExampleParms(Object record, TProductSortExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}

	@Override
	public List<TProductSort> getProductSortByPage(Map<String, Object> parmMap) {
		List<TProductSort> list = getSqlMapClientTemplate().queryForList(
				"t_product_sort.getProductSortByPage", parmMap);
		return list;
	}

	@Override
	public int getProductSortTotal() {
		Integer count = (Integer) getSqlMapClientTemplate().queryForObject(
				"t_product_sort.getProductSortTotal");
		return count.intValue();
	}

	@Override
	public List<TProductSort> getProSortBySortCode(String sortCode) {
		return this.getSqlMapClientTemplate().queryForList("t_product_sort.getProSortBySortCode", sortCode);
	}

	@Override
	public List<TProductSort> getProSortByBrand(String brand) {
		return this.getSqlMapClientTemplate().queryForList("t_product_sort.getProSortByBrand", brand);
	}

	@Override
	public List<TProductSort> getAllProductSort() {
		
		return this.getSqlMapClientTemplate().queryForList("t_product_sort.getAllProductSort");
	}

	@Override
	public List<TProductSort> getProSort4Import(TreeDto treeDto) {
		return this.getSqlMapClientTemplate().queryForList("t_product_sort.getProSort4Import", treeDto);
	}
}