package com.tl.resource.dao;

import com.tl.resource.business.dto.ImportSalesPriceDto;
import com.tl.resource.business.dto.SalesPriceHistoryDto;
import com.tl.resource.business.dto.SalesPriceHistoryProDto;
import com.tl.resource.dao.pojo.TCusSalesPriceHistory;
import com.tl.resource.dao.pojo.TSalesPriceHistory;
import com.tl.resource.dao.pojo.TSalesPriceHistoryExample;
import java.util.List;
import java.util.Map;

public interface TSalesPriceHistoryDAO {

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_sales_price_history
	 * @ibatorgenerated  Fri Oct 16 10:53:03 CST 2009
	 */
	int countByExample(TSalesPriceHistoryExample example);

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_sales_price_history
	 * @ibatorgenerated  Fri Oct 16 10:53:03 CST 2009
	 */
	int deleteByExample(TSalesPriceHistoryExample example);

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_sales_price_history
	 * @ibatorgenerated  Fri Oct 16 10:53:03 CST 2009
	 */
	int deleteByPrimaryKey(String id);

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_sales_price_history
	 * @ibatorgenerated  Fri Oct 16 10:53:03 CST 2009
	 */
	void insert(TSalesPriceHistory record);

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_sales_price_history
	 * @ibatorgenerated  Fri Oct 16 10:53:03 CST 2009
	 */
	void insertSelective(TSalesPriceHistory record);

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_sales_price_history
	 * @ibatorgenerated  Fri Oct 16 10:53:03 CST 2009
	 */
	List selectByExample(TSalesPriceHistoryExample example);

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_sales_price_history
	 * @ibatorgenerated  Fri Oct 16 10:53:03 CST 2009
	 */
	TSalesPriceHistory selectByPrimaryKey(String id);

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_sales_price_history
	 * @ibatorgenerated  Fri Oct 16 10:53:03 CST 2009
	 */
	int updateByExampleSelective(TSalesPriceHistory record,
			TSalesPriceHistoryExample example);

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_sales_price_history
	 * @ibatorgenerated  Fri Oct 16 10:53:03 CST 2009
	 */
	int updateByExample(TSalesPriceHistory record,
			TSalesPriceHistoryExample example);

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_sales_price_history
	 * @ibatorgenerated  Fri Oct 16 10:53:03 CST 2009
	 */
	int updateByPrimaryKeySelective(TSalesPriceHistory record);

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_sales_price_history
	 * @ibatorgenerated  Fri Oct 16 10:53:03 CST 2009
	 */
	int updateByPrimaryKey(TSalesPriceHistory record);
	
	/**
	 * 获取对应产品的历史报价信息，只包含报价历史信息的列表
	 * @param paramMap
	 * @return 
	 */
	public List<TCusSalesPriceHistory> getPriceHistoryByCustomer(Map<String, String> paramMap);
	
	/**
	 * 获取产品历史报价信息，包含产品工具信息和历史报价信息的列表
	 * @param paramMap
	 * @return 
	 */
	public List<SalesPriceHistoryDto> getSalesPriHistory(Map<String, String> paramMap);

	/**
	 * 根据产品ID获取产品信息
	 * @param parmMap
	 * @return
	 */
	List<SalesPriceHistoryProDto> getSalesHistoryProductByPageAndProductId(
			Map<String, Object> parmMap);
	/**
	 * 根据产品ID获取产品信息总数
	 * @param parmMap
	 * @return
	 */
	int getSalesHistoryProductTotalByProductId(Map<String, Object> parmMap);

	/**
	 * 取得历史面价对应年度(ftl 2010-01-13)
	 * @param productBrand 
	 * @return
	 */
	List getHistoryYear(String productBrand);
	/**
	 * 批量导入文件
	 * @param insertSalePriHis
	 * @return
	 */
	boolean batchInsertSalePri(final List<ImportSalesPriceDto> insertSalePriHis);
	/**
	 * 导入文件数据
	 * @param datefilepath
	 */
	boolean  loadSalePriceDateFile(String datefilepath);
	
	/**
	 * 讲$替换为空格
	 */
	void replaceDollar();
	
	/**
	 * 去掉牌号前面或者后面的空格
	 */
	void deleteSpace();
	
	/**
	 * 校验临时表中数据是否重复，重复则返回重复的数据
	 * @return
	 */
	List<ImportSalesPriceDto> checkReptnForTempDate();
	
	/**
	 * 修改重复数据的flag为1
	 * @return
	 */
	void updateReptnForTempDate(Map<String, Object> parmMap);
	
	/**
	 * 校验临临时表中的工具是否存在，如果不存在就返回结果集
	 * @return
	 */
	List<ImportSalesPriceDto> checkExistForTempDate();
	
	/**
	 * 将不存在的记录的flag改为2
	 */
	void updateExistForTempDate(Map<String, Object> parmMap);
	
	/**
	 * 更新面价表和Excel中的数据，并且将临时表中记录的flag改为3 
	 */
	void updateSalePrice();
	
	/**
	 * 将临时表中的数据插入到面价表中
	 */
	void insertSalePriceHistory();
	
	/**
	 * 查找flag为2的临时记录
	 */
	List<ImportSalesPriceDto> seleteFlagEqualsTow();
	
	/**
	 * 查找flag为3的临时记录
	 */
	List<ImportSalesPriceDto> seleteFlagEqualsThree();
	
	/**
	 * 删除临时表的数据
	 */
	void deleteTempDate();
	
	List<SalesPriceHistoryProDto> getHistoryPriceByToolsId(String toolsId);
	
	
	List<TSalesPriceHistory> getHistoryMarketPrice(Map<String, Object> parmMap);
}