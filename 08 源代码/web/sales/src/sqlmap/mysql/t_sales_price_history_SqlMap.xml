<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="t_sales_price_history">
  <resultMap class="com.tl.resource.dao.pojo.TSalesPriceHistory" id="ibatorgenerated_BaseResultMap">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Feb 08 15:39:17 CST 2010.
    -->
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="product_tool_infor_id" jdbcType="VARCHAR" property="productToolInforId" />
    <result column="customer_infor_id" jdbcType="VARCHAR" property="customerInforId" />
    <result column="product_code" jdbcType="VARCHAR" property="productCode" />
    <result column="history_price" jdbcType="DECIMAL" property="historyPrice" />
    <result column="brand_code" jdbcType="VARCHAR" property="brandCode" />
    <result column="edit_date" jdbcType="TIMESTAMP" property="editDate" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="sale_price_date" jdbcType="VARCHAR" property="salePriceDate" />
    <result column="parent_id" jdbcType="VARCHAR" property="parentId" />
    <result column="leaf" jdbcType="INTEGER" property="leaf" />
    <result column="product_brand" jdbcType="VARCHAR" property="productBrand" />
  </resultMap>
  
  <!-- 导入数据的dto -->
   <resultMap class="com.tl.resource.business.dto.ImportSalesPriceDto" id="importDto">
    <result column="id" jdbcType="VARCHAR" property="id" />   
    <result column="brand_code" jdbcType="VARCHAR" property="brandCode" />
    <result column="old_brand_code" jdbcType="VARCHAR" property="oldBrandCode" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="product_brand" jdbcType="VARCHAR" property="productBrand" />
    <result column="history_price" jdbcType="DECIMAL" property="historyPrice" />
    <result column="product_unit" jdbcType="DECIMAL" property="productUnit" />
    <result column="sale_price_date" jdbcType="VARCHAR" property="salePriceDate" />
    <result column="edit_date" jdbcType="TIMESTAMP" property="editDate" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="row_number" jdbcType="VARCHAR" property="rowNumber" />
  </resultMap>
  
  <sql id="ibatorgenerated_Example_Where_Clause">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Feb 08 15:39:17 CST 2010.
    -->
    <iterate conjunction="or" prepend="where" property="oredCriteria" removeFirstPrepend="iterate">
      <isEqual compareValue="true" property="oredCriteria[].valid">
        (
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithoutValue">
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithSingleValue">
          $oredCriteria[].criteriaWithSingleValue[].condition$
            #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithListValue">
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate close=")" conjunction="," open="(" property="oredCriteria[].criteriaWithListValue[].values">
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithBetweenValue">
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  <select id="getHistoryYear" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    <![CDATA[
      select his.sale_price_date salePriceDate from t_sales_price_history his where his.product_brand = #productBrand# group by his.sale_price_date
    ]]>
  </select>
  <select id="ibatorgenerated_selectByExample" parameterClass="com.tl.resource.dao.pojo.TSalesPriceHistoryExample" resultMap="ibatorgenerated_BaseResultMap">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Feb 08 15:39:17 CST 2010.
    -->
    select id, product_tool_infor_id, customer_infor_id, product_code, history_price, brand_code,
      edit_date, user_id, user_name, sale_price_date, parent_id, leaf, product_brand
    from t_sales_price_history
    <isParameterPresent>
      <include refid="t_sales_price_history.ibatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause">
        order by $orderByClause$
      </isNotNull>
    </isParameterPresent>
  </select>
  <select id="ibatorgenerated_selectByPrimaryKey" parameterClass="com.tl.resource.dao.pojo.TSalesPriceHistory" resultMap="ibatorgenerated_BaseResultMap">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Feb 08 15:39:17 CST 2010.
    -->
    select id, product_tool_infor_id, customer_infor_id, product_code, history_price, brand_code,
      edit_date, user_id, user_name, sale_price_date, parent_id, leaf, product_brand
    from t_sales_price_history
    where id = #id:VARCHAR#
  </select>
  <delete id="ibatorgenerated_deleteByPrimaryKey" parameterClass="com.tl.resource.dao.pojo.TSalesPriceHistory">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Feb 08 15:39:17 CST 2010.
    -->
    delete from t_sales_price_history
    where id = #id:VARCHAR#
  </delete>
  <delete id="ibatorgenerated_deleteByExample" parameterClass="com.tl.resource.dao.pojo.TSalesPriceHistoryExample">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Feb 08 15:39:17 CST 2010.
    -->
    delete from t_sales_price_history
    <include refid="t_sales_price_history.ibatorgenerated_Example_Where_Clause" />
  </delete>
  <insert id="ibatorgenerated_insert" parameterClass="com.tl.resource.dao.pojo.TSalesPriceHistory">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Feb 08 15:39:17 CST 2010.
    -->
    insert into t_sales_price_history (id, product_tool_infor_id, customer_infor_id, product_code,
      history_price, brand_code, edit_date, user_id, user_name, sale_price_date, parent_id, leaf,
      product_brand)
    values (#id:VARCHAR#, #productToolInforId:VARCHAR#, #customerInforId:VARCHAR#,
      #productCode:VARCHAR#, #historyPrice:DECIMAL#, #brandCode:VARCHAR#, #editDate:TIMESTAMP#,
      #userId:VARCHAR#, #userName:VARCHAR#, #salePriceDate:VARCHAR#, #parentId:VARCHAR#,
      #leaf:INTEGER#, #productBrand:VARCHAR#)
  </insert>
  <insert id="loadSalePriceDateFile" parameterClass="java.lang.String">load data local infile #value# into table temp_sale_price</insert> 
  <insert id="ibatorgenerated_insertSelective" parameterClass="com.tl.resource.dao.pojo.TSalesPriceHistory">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Feb 08 15:39:17 CST 2010.
    -->
    insert into t_sales_price_history
    <dynamic prepend="(">
      <isNotNull prepend="," property="id">
        id
      </isNotNull>
      <isNotNull prepend="," property="productToolInforId">
        product_tool_infor_id
      </isNotNull>
      <isNotNull prepend="," property="customerInforId">
        customer_infor_id
      </isNotNull>
      <isNotNull prepend="," property="productCode">
        product_code
      </isNotNull>
      <isNotNull prepend="," property="historyPrice">
        history_price
      </isNotNull>
      <isNotNull prepend="," property="brandCode">
        brand_code
      </isNotNull>
      <isNotNull prepend="," property="editDate">
        edit_date
      </isNotNull>
      <isNotNull prepend="," property="userId">
        user_id
      </isNotNull>
      <isNotNull prepend="," property="userName">
        user_name
      </isNotNull>
      <isNotNull prepend="," property="salePriceDate">
        sale_price_date
      </isNotNull>
      <isNotNull prepend="," property="parentId">
        parent_id
      </isNotNull>
      <isNotNull prepend="," property="leaf">
        leaf
      </isNotNull>
      <isNotNull prepend="," property="productBrand">
        product_brand
      </isNotNull>
      )
    </dynamic>
    values
    <dynamic prepend="(">
      <isNotNull prepend="," property="id">
        #id:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="productToolInforId">
        #productToolInforId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="customerInforId">
        #customerInforId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="productCode">
        #productCode:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="historyPrice">
        #historyPrice:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="brandCode">
        #brandCode:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="editDate">
        #editDate:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="userId">
        #userId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="userName">
        #userName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="salePriceDate">
        #salePriceDate:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="parentId">
        #parentId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="leaf">
        #leaf:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="productBrand">
        #productBrand:VARCHAR#
      </isNotNull>
      )
    </dynamic>
  </insert>
  <select id="ibatorgenerated_countByExample" parameterClass="com.tl.resource.dao.pojo.TSalesPriceHistoryExample" resultClass="java.lang.Integer">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Feb 08 15:39:17 CST 2010.
    -->
    select count(*) from t_sales_price_history
    <include refid="t_sales_price_history.ibatorgenerated_Example_Where_Clause" />
  </select>
  <update id="ibatorgenerated_updateByExampleSelective">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Feb 08 15:39:17 CST 2010.
    -->
    update t_sales_price_history
    <dynamic prepend="set">
      <isNotNull prepend="," property="record.id">
        id = #record.id:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.productToolInforId">
        product_tool_infor_id = #record.productToolInforId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.customerInforId">
        customer_infor_id = #record.customerInforId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.productCode">
        product_code = #record.productCode:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.historyPrice">
        history_price = #record.historyPrice:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="record.brandCode">
        brand_code = #record.brandCode:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.editDate">
        edit_date = #record.editDate:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="record.userId">
        user_id = #record.userId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.userName">
        user_name = #record.userName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.salePriceDate">
        sale_price_date = #record.salePriceDate:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.parentId">
        parent_id = #record.parentId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.leaf">
        leaf = #record.leaf:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.productBrand">
        product_brand = #record.productBrand:VARCHAR#
      </isNotNull>
    </dynamic>
    <isParameterPresent>
      <include refid="t_sales_price_history.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByExample">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Feb 08 15:39:17 CST 2010.
    -->
    update t_sales_price_history
    set id = #record.id:VARCHAR#,
      product_tool_infor_id = #record.productToolInforId:VARCHAR#,
      customer_infor_id = #record.customerInforId:VARCHAR#,
      product_code = #record.productCode:VARCHAR#,
      history_price = #record.historyPrice:DECIMAL#,
      brand_code = #record.brandCode:VARCHAR#,
      edit_date = #record.editDate:TIMESTAMP#,
      user_id = #record.userId:VARCHAR#,
      user_name = #record.userName:VARCHAR#,
      sale_price_date = #record.salePriceDate:VARCHAR#,
      parent_id = #record.parentId:VARCHAR#,
      leaf = #record.leaf:INTEGER#,
      product_brand = #record.productBrand:VARCHAR#
    <isParameterPresent>
      <include refid="t_sales_price_history.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByPrimaryKeySelective" parameterClass="com.tl.resource.dao.pojo.TSalesPriceHistory">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Feb 08 15:39:17 CST 2010.
    -->
    update t_sales_price_history
    <dynamic prepend="set">
      <isNotNull prepend="," property="productToolInforId">
        product_tool_infor_id = #productToolInforId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="customerInforId">
        customer_infor_id = #customerInforId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="productCode">
        product_code = #productCode:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="historyPrice">
        history_price = #historyPrice:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="brandCode">
        brand_code = #brandCode:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="editDate">
        edit_date = #editDate:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="userId">
        user_id = #userId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="userName">
        user_name = #userName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="salePriceDate">
        sale_price_date = #salePriceDate:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="parentId">
        parent_id = #parentId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="leaf">
        leaf = #leaf:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="productBrand">
        product_brand = #productBrand:VARCHAR#
      </isNotNull>
    </dynamic>
    where id = #id:VARCHAR#
  </update>
  <update id="ibatorgenerated_updateByPrimaryKey" parameterClass="com.tl.resource.dao.pojo.TSalesPriceHistory">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Feb 08 15:39:17 CST 2010.
    -->
    update t_sales_price_history
    set product_tool_infor_id = #productToolInforId:VARCHAR#,
      customer_infor_id = #customerInforId:VARCHAR#,
      product_code = #productCode:VARCHAR#,
      history_price = #historyPrice:DECIMAL#,
      brand_code = #brandCode:VARCHAR#,
      edit_date = #editDate:TIMESTAMP#,
      user_id = #userId:VARCHAR#,
      user_name = #userName:VARCHAR#,
      sale_price_date = #salePriceDate:VARCHAR#,
      parent_id = #parentId:VARCHAR#,
      leaf = #leaf:INTEGER#,
      product_brand = #productBrand:VARCHAR#
    where id = #id:VARCHAR#
  </update>
  
  <!-- 向临时表temp_sale_price中插入数据 -->
   <insert id="insertTempDate" parameterClass="com.tl.resource.business.dto.ImportSalesPriceDto">
    insert into temp_sale_price
    <dynamic prepend="(">
      <isNotNull prepend="," property="id">
        id
      </isNotNull>
      <isNotNull prepend="," property="historyPrice">
        history_price
      </isNotNull>
      <isNotNull prepend="," property="brandCode">
        brand_code
      </isNotNull>
      <isNotNull prepend="," property="oldBrandCode">
        old_brand_code
      </isNotNull>
      <isNotNull prepend="," property="salePriceDate">
        sale_price_date
      </isNotNull>
      <isNotNull prepend="," property="productBrand">
        product_brand
      </isNotNull>
      <isNotNull prepend="," property="productName">
        product_name
      </isNotNull>
      <isNotNull prepend="," property="productUnit">
        product_unit
      </isNotNull>
      <isNotNull prepend="," property="userId">
        user_id
      </isNotNull>
      <isNotNull prepend="," property="userName">
        user_name
      </isNotNull>
      <isNotNull prepend="," property="editDate">
        edit_date
      </isNotNull>
      <isNotNull prepend="," property="rowNumber">
        row_number
      </isNotNull>
       <isNotNull prepend="," property="flag">
        flag
      </isNotNull>
      )
    </dynamic>
    values
    <dynamic prepend="(">
      <isNotNull prepend="," property="id">
        #id:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="historyPrice">
        #historyPrice:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="brandCode">
        #brandCode:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="oldBrandCode">
    	#oldBrandCode:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="salePriceDate">
        #salePriceDate:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="productBrand">
        #productBrand:VARCHAR#
      </isNotNull>
       <isNotNull prepend="," property="productName">
       #productName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="productUnit">
      #productUnit:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="userId">
         #userId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="userName">
         #userName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="editDate">
         #editDate:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="rowNumber">
        #rowNumber:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="flag">
        #flag:VARCHAR#
      </isNotNull>
      )
    </dynamic>
  </insert>
  
  <!-- 将$号替换成空格 -->
  <update id="replaceDollar">
  	update temp_sale_price set brand_code = Replace(brand_code,'?',' ')
  </update>
  
  <!-- 去掉牌号前面或者后面的空格 -->
  <update id="deleteSpace">
  	update temp_sale_price set brand_code = trim(brand_code)
  </update>
  
   <!-- 校验临时表中是否有重复数据 -->
 <select id="checkReptnForTempDate" resultClass="java.util.List" resultMap="importDto">
	select id,brand_code,flag ,old_brand_code,product_name,product_brand,
    history_price,product_unit,sale_price_date,user_id,user_name,edit_date,row_number
	  FROM   temp_sale_price   
	  GROUP   BY   brand_code,product_brand
	  HAVING   COUNT(*)>1
 </select>

   <!-- 将重复则将记录的flag改为1 -->
 <update id="updateReptnForTempDate" parameterClass="java.util.Map">
	update temp_sale_price set flag = 1 
	where brand_code =#brandCode:VARCHAR#  
	and product_brand = #productBrand:VARCHAR#
 </update>
 
  <!-- 校验临临时表中的工具是否存在，返回不存在的结果集 -->
 <select id="checkExistForTempDate" resultClass="java.util.List" resultMap="importDto">
	select t.id,t._id as brand_code,t.flag ,'' old_brand_code,'' product_name,'' product_brand,
0 history_price,'' product_unit,'' sale_price_date,'' user_id,'' user_name,null edit_date,'' row_number
from
	(select tem.id as id,pro.id as _id,tem.flag as flag from temp_sale_price tem 
	left join t_product_tools_infor pro
	on tem.brand_code = pro.brand_code
	and tem.product_brand = pro.product_brand)t
	where t._id is null and t.flag = 0
 </select>
 
 <!-- 将不存在的数据的flag设置为2 -->
 <update id="updateExistForTempDate" parameterClass="java.util.Map">
	update temp_sale_price set flag = 2 where id = #tempId:VARCHAR#
 </update>
  
  <!-- 更新面价表和Excel中的数据，并且将临时表中记录的flag改为3 -->
  <update id="updateSalePrice">
  	update temp_sale_price tem,t_sales_price_history sph
	set tem.flag = 3 , sph.history_price = tem.history_price
	where tem.flag = 0
	and tem.brand_code = sph.brand_code
	and tem.product_brand = sph.product_brand
	and tem.sale_price_date = sph.sale_price_date
  </update>
  
  <!-- 将临时表中的数据插入到面价表中(临时表中flag为0的记录) -->
  <insert id="insertSalePriceHistory">
  insert into t_sales_price_history (id,product_tool_infor_id,product_code,history_price,
	brand_code,edit_date,user_id,user_name,sale_price_date,parent_id,leaf,product_brand)
	select 
	t.id,t.product_tool_infor_id,t.product_code,t.history_price,t.brand_code,t.edit_date,t.user_id,t.user_name,
	t.sale_price_date,t.parent_id,t.leaf,t.product_brand
	 from
	(select tem.id,pro.brand_code,pro.product_name,tem.product_brand,tem.history_price,
	pro.product_unit,tem.sale_price_date,tem.user_id,tem.user_name,tem.edit_date,
	pro.id as product_tool_infor_id,pro.leaf,pro.parent_id,pro.product_code
	from temp_sale_price tem 
	left join t_product_tools_infor pro
	on tem.brand_code =  pro.brand_code
	and tem.product_brand = pro.product_brand
	and tem.flag = 0)t
	where t.product_tool_infor_id is not null
  </insert>
  
  <!-- 查找flag为1的临时记录 -->
  <select id="seleteFlagEqualsTow" resultClass="java.util.List" resultMap="importDto">
  		select * from temp_sale_price where flag = 1
  </select>
  
   <!-- 查找flag为2的临时记录 -->
  <select id="seleteFlagEqualsThree" resultClass="java.util.List" resultMap="importDto">
  		select * from temp_sale_price where flag = 2
  </select>
  
  <!-- 删除临时表的数据 -->
  <delete id="deleteTempDate">
  	delete from temp_sale_price 
  </delete>
  
  <!-- 根据工具信息Id查找面价表 -->
  <select id="getHistoryMarketPrice" parameterClass="java.util.Map" resultClass="java.util.List" resultMap="ibatorgenerated_BaseResultMap">
  	select t.* from t_sales_price_history t
	left join t_product_brand p
	on t.product_brand = p.name
	and t.sale_price_date = p.order_price_run_date
	where t.product_tool_infor_id = #toolsId:VARCHAR#
  </select>
</sqlMap>