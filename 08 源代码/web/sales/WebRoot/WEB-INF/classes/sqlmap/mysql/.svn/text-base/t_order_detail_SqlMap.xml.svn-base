<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="t_order_detail">

  <typeAlias alias="orderDetails" type="com.tl.resource.business.dto.OrderDetialsDto"/>
  <typeAlias alias="arrivalOrderDetails" type="com.tl.resource.business.dto.ArrivalOrderDetialsDto"/>
  
  <resultMap class="com.tl.resource.dao.pojo.TOrderDetail" id="ibatorgenerated_BaseResultMap">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Oct 19 19:42:13 CST 2009.
    -->
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="contract_product_detail_id" jdbcType="VARCHAR" property="contractProductDetailId" />
    <result column="stock_order_infor_id" jdbcType="VARCHAR" property="stockOrderInforId" />
    <result column="brand_code" jdbcType="VARCHAR" property="brandCode" />
    <result column="tools_id" jdbcType="VARCHAR" property="toolsId" />
    <result column="parent_tools_id" jdbcType="VARCHAR" property="parentToolsId" />
    <result column="leaf" jdbcType="INTEGER" property="leaf" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="contract_amount" jdbcType="DECIMAL" property="contractAmount" />
    <result column="order_amount" jdbcType="DECIMAL" property="orderAmount" />
    <result column="product_unit" jdbcType="VARCHAR" property="productUnit" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="product_money" jdbcType="DECIMAL" property="productMoney" />
    <result column="product_brand" jdbcType="VARCHAR" property="productBrand" />
    <result column="product_code" jdbcType="VARCHAR" property="productCode" />
    <result column="contract_project_sort_id" jdbcType="VARCHAR" property="contractProjectSortId" />
    <result column="pro_sort_name" jdbcType="VARCHAR" property="proSortName" />
    <result column="project_code" jdbcType="VARCHAR" property="projectCode" />
    <result column="serial_number" jdbcType="DECIMAL" property="serialNumber" />
    <result column="delivery_date" jdbcType="VARCHAR" property="deliveryDate" />
	<result column="price_change" jdbcType="INTEGER" property="priceChange" />
  </resultMap>
  
  <resultMap id="result" class="orderDetails" extends="ibatorgenerated_BaseResultMap">
    <result property="children" column="id" select="t_order_detail.getOrderDetailsParId"/>
     <result property="remainAmount" column="remain_amount" jdbcType="DECIMAL"/>
     <result property="fileCount" column="file_count" jdbcType="INTEGER"/>
  </resultMap>
  
   <resultMap id="resultMap" class="orderDetails" extends="ibatorgenerated_BaseResultMap">
     <result property="remainAmount" column="remain_amount" jdbcType="DECIMAL"/>
  </resultMap>
  
  <resultMap id="resultHasReserve" class="orderDetails" extends="ibatorgenerated_BaseResultMap">
    <result property="children" column="id" select="t_order_detail.getOrderDetailsParIdHasReserve"/>
    <result property="reserveAmount" column="reserve_amount" jdbcType="DECIMAL"/>
    <result property="planAmount" column="plan_amount" jdbcType="DECIMAL"/>
    <result property="fileCount" column="file_count" jdbcType="INTEGER"/>
     <result property="remainAmount" column="remain_amount" jdbcType="DECIMAL"/>
  </resultMap>
  
  <resultMap id="hasArrivalResultMap" class="arrivalOrderDetails" extends="ibatorgenerated_BaseResultMap">
    <result property="hasArrivalAmount" column="has_arrival_amount" jdbcType="DECIMAL"/>
  </resultMap>
  
  <!-- 订单产品是否已全部到货 大于0 未全部到货（ftl)2009-12-07 -->
  <select id="getCanArrivalPro" parameterClass="String" resultClass="Integer">
    <![CDATA[
      SELECT COUNT(*) FROM (
      SELECT IFNULL(SUM(p.arrival_amount),0) AS has_arrival_amount,t.order_amount FROM t_order_detail t
            LEFT JOIN (SELECT b.arrival_amount,b.order_detail_id 
            FROM t_product_arrival_infor a,t_product_arrival_detail b 
            WHERE a.id = b.product_arrival_infor_id AND a.status = 1 ) p ON t.id = p.order_detail_id 
      WHERE t.stock_order_infor_id=#value#
      GROUP BY t.id ) yy WHERE  yy.has_arrival_amount < yy.order_amount
    ]]>
  </select>
  
  <!-- 订单详细包含已经到货数量(ftl)2009-11-25 -->
  <select id="getDetailWithHasArrivalByOrderId" parameterClass="java.lang.String" resultClass="java.util.List" resultMap="hasArrivalResultMap">
    <![CDATA[
      SELECT SUM(aa.arrival_amount) AS has_arrival_amount, tt.* 
       FROM (
      	SELECT t.*  
      	FROM t_order_detail t        
      	JOIN t_order_infor o ON t.stock_order_infor_id = o.id  
      	WHERE o.id=#value# AND t.parent_tools_id='root' 
      ) tt LEFT JOIN (
      	SELECT b.* FROM t_product_arrival_infor a , t_product_arrival_detail b        
      	WHERE a.id=b.product_arrival_infor_id AND  a.status <> 2  
      ) aa ON tt.id = aa.order_detail_id  
       GROUP BY tt.id ORDER BY contract_project_sort_id ,serial_number ASC 
    ]]>
  </select>
  
   <select id="getOrderDetailsParId" parameterClass="java.lang.String" resultClass="java.util.List" resultMap="result">
    <![CDATA[
      select id ,
     leaf
      ,contract_product_detail_id ,stock_order_infor_id ,brand_code ,tools_id ,parent_tools_id ,product_name ,contract_amount,order_amount,product_unit, price,product_money,
       product_brand,product_code,contract_project_sort_id,pro_sort_name,project_code,serial_number, 0 remain_amount,delivery_date,0 file_count,price_change
      from t_order_detail detail where detail.parent_tools_id=#value# 
    ]]>
  </select>
  <!-- 订单详细(加工品订单) -->
   <select id="getOrderDetailsByOrderId" parameterClass="java.util.Map" resultClass="java.util.List" resultMap="result">
     select d.id ,
     d.leaf
      ,d.contract_product_detail_id ,d.stock_order_infor_id ,d.brand_code ,d.tools_id ,d.parent_tools_id ,
		d.product_name ,d.contract_amount,d.product_unit, d.price,d.order_amount,d.product_money,
      d.product_brand,d.product_code,d.contract_project_sort_id,d.pro_sort_name,d.project_code,d.serial_number,d.delivery_date,
		(c.amount - 
		(select sum(od.order_amount) from t_order_detail od where od.contract_product_detail_id = c.id and od.parent_tools_id = 'root') 
		-ifnull((select sum(s.amount) 
		from t_out_stock_detail s,t_out_stock_infor ot where s.contract_product_detail_id = c.id and ot.id = s.out_stock_infor_id and ot.out_stock_type = 1),0)
		-ifnull((select sum(p.order_amount) from t_order_detail p where CONCAT(p.contract_product_detail_id,&apos;##&apos;) = c.id),0)
		)as remain_amount,
		(select ifnull(count(*),0) from t_accessories where business_id = d.tools_id and business_type = 1) as file_count,
		d.price_change
      from 
		t_order_detail d,
		t_contract_product_detail c
		where 
		d.stock_order_infor_id='$orderId$'
		and 
		d.parent_tools_id = 'root'
		and
		c.id = d.contract_product_detail_id
       <isNotNull property="startIndex">
          limit $startIndex$,$pageSize$
      </isNotNull>
   
   </select>
   
   
   
   <select id="getOrderDetailsList" parameterClass="java.util.Map" resultClass="java.util.List" resultMap="result">
     select d.id ,
     d.leaf
      ,d.contract_product_detail_id ,d.stock_order_infor_id ,d.brand_code ,d.tools_id ,d.parent_tools_id ,
		d.product_name ,d.contract_amount,d.product_unit, d.price,d.order_amount,d.product_money,
      d.product_brand,d.product_code,d.contract_project_sort_id,d.pro_sort_name,d.project_code,d.serial_number,
		0 remain_amount,d.delivery_date,
		(select ifnull(count(*),0) from t_accessories where business_id = d.tools_id and business_type = 1) as file_count,
		d.price_change
      from 
		t_order_detail d
		where 
		d.stock_order_infor_id='$orderId$'
		and 
		d.parent_tools_id = 'root'
		order by contract_project_sort_id,serial_number
       <isNotNull property="startIndex">
          limit $startIndex$,$pageSize$
      </isNotNull>
   </select>
   
    <select id="getOrderDetailsListCount" parameterClass="java.util.Map" resultClass="java.lang.Integer">
     select count(d.id)
      from 
		t_order_detail d
		where 
		d.stock_order_infor_id='$orderId$'
		and 
		d.parent_tools_id = 'root'
   </select>
  <!-- 包含库存数量 contract_amount order_amount,order_amount contract_amount 写的比较隐晦-->
  <select id="getOrderDetailsParIdHasReserve" parameterClass="java.lang.String" resultClass="java.util.List" resultMap="resultHasReserve">
      SELECT id ,leaf,contract_product_detail_id ,stock_order_infor_id ,brand_code ,tools_id ,parent_tools_id ,product_name ,contract_amount order_amount,
        (SELECT ifnull(SUM(c.amount),0) 
			FROM t_accounts_infor c,t_out_stock_detail d 
			WHERE c.invoice_id = d.id 
			AND d.contract_product_detail_id = detail.contract_product_detail_id
		) remain_amount,
        order_amount contract_amount,product_unit, price,product_money, product_code,     
		IFNULL((
		SELECT SUM(CASE 
		WHEN c.account_type = 4 THEN
		c.amount 
		WHEN c.account_type = 5 THEN 
		-c.amount
		ELSE 
		0
		END 
		)
		FROM t_accounts_infor c WHERE c.account_type IN (4,5) AND c.product_code = detail.product_code
		),0) reserve_amount, 
		IFNULL((SELECT pl.plan_amount FROM t_reserve_plan_infor pl WHERE pl.stock_order_detail_id = detail.id),0) plan_amount,
		product_brand,product_code,contract_project_sort_id,pro_sort_name,project_code,serial_number,delivery_date,
		(SELECT IFNULL(COUNT(*),0) FROM t_accessories WHERE business_id = detail.tools_id AND business_type = 1) AS file_count,
		detail.price_change
		FROM t_order_detail detail
		WHERE detail.parent_tools_id=#value# 
  </select>
  <!-- 订单详细 包含库存数量  -->
   <select id="getOrderDetailsByOrderIdHasReserve" parameterClass="java.lang.String" resultClass="java.util.List" resultMap="resultHasReserve">
      select id ,leaf,contract_product_detail_id ,stock_order_infor_id ,brand_code ,tools_id ,parent_tools_id ,
		product_name ,contract_amount,order_amount,product_unit, price,product_money, product_code,0 remain_amount,     
		ifnull((select i.amount from t_reserve_infor i where i.product_code = detail.product_code),0) reserve_amount, 
      ifnull((select pl.plan_amount from t_reserve_plan_infor pl where pl.stock_order_detail_id = detail.id),0) plan_amount,
      product_brand,product_code,contract_project_sort_id,pro_sort_name,project_code,serial_number,delivery_date,
		(select ifnull(count(*),0) from t_accessories where business_id = detail.tools_id and business_type = 1) as file_count,
		detail.price_change
      from t_order_detail detail
		where parent_tools_id = 'root' and detail.stock_order_infor_id=#value# 
   </select>
   
  <!-- 获取订单产品总数(ftl) -->
  <select id="getOrderDetailsTotalByOrderId" parameterClass="java.lang.String" resultClass="java.lang.Integer">
    <![CDATA[
      select count(*) from t_order_detail where stock_order_infor_id=#value#;
    ]]>
  </select>
  
  <!-- 订单详细总数 -->
    <select id="getOrderDetailsTotal" parameterClass="java.lang.String" resultClass="java.lang.Integer">
    <![CDATA[
      select count(*) from t_order_detail where parent_tools_id='root' and stock_order_infor_id=#value#;
    ]]>
  </select>
  
  
  <sql id="ibatorgenerated_Example_Where_Clause">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Oct 19 19:42:13 CST 2009.
    -->
    <iterate conjunction="or" prepend="where" property="oredCriteria" removeFirstPrepend="iterate">
      <isEqual compareValue="true" property="oredCriteria[].valid">
        (
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithoutValue">
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithSingleValue">
          $oredCriteria[].criteriaWithSingleValue[].condition$
            #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithListValue">
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate close=")" conjunction="," open="(" property="oredCriteria[].criteriaWithListValue[].values">
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithBetweenValue">
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  <select id="ibatorgenerated_selectByExample" parameterClass="com.tl.resource.dao.pojo.TOrderDetailExample" resultMap="ibatorgenerated_BaseResultMap">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Oct 19 19:42:13 CST 2009.
    -->
    select id, contract_product_detail_id, stock_order_infor_id, brand_code, tools_id,
      parent_tools_id, leaf, product_name, contract_amount, order_amount, product_unit, price,
      product_money,product_brand,product_code,contract_project_sort_id,pro_sort_name,project_code,serial_number,delivery_date,price_change
    from t_order_detail
    <isParameterPresent>
      <include refid="t_order_detail.ibatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause">
        order by $orderByClause$
      </isNotNull>
    </isParameterPresent>
  </select>
  <select id="ibatorgenerated_selectByPrimaryKey" parameterClass="com.tl.resource.dao.pojo.TOrderDetail" resultMap="ibatorgenerated_BaseResultMap">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Oct 19 19:42:13 CST 2009.
    -->
    select id, contract_product_detail_id, stock_order_infor_id, brand_code, tools_id,
      parent_tools_id, leaf, product_name, contract_amount, order_amount, product_unit, price,
      product_money,product_brand,product_code,contract_project_sort_id,pro_sort_name,project_code,serial_number,delivery_date,price_change
    from t_order_detail
    where id = #id:VARCHAR#
  </select>
  <delete id="ibatorgenerated_deleteByPrimaryKey" parameterClass="com.tl.resource.dao.pojo.TOrderDetail">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Oct 19 19:42:13 CST 2009.
    -->
    delete from t_order_detail
    where id = #id:VARCHAR#
  </delete>
  
   <delete id="deleteByOrderId" parameterClass="java.lang.String">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Oct 19 19:42:13 CST 2009.
    -->
    delete from t_order_detail
    where stock_order_infor_id = #id:VARCHAR#
  </delete>
  
  <delete id="ibatorgenerated_deleteByExample" parameterClass="com.tl.resource.dao.pojo.TOrderDetailExample">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Oct 19 19:42:13 CST 2009.
    -->
    delete from t_order_detail
    <include refid="t_order_detail.ibatorgenerated_Example_Where_Clause" />
  </delete>
  <insert id="ibatorgenerated_insert" parameterClass="com.tl.resource.dao.pojo.TOrderDetail">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Oct 19 19:42:13 CST 2009.
    -->
    insert into t_order_detail (id, contract_product_detail_id, stock_order_infor_id, brand_code,
      tools_id, parent_tools_id, leaf, product_name, contract_amount, order_amount, product_unit,
      price, product_money,product_brand,product_code,contract_project_sort_id,pro_sort_name,project_code,serial_number,delivery_date,price_change)
    values (#id:VARCHAR#, #contractProductDetailId:VARCHAR#, #stockOrderInforId:VARCHAR#,
      #brandCode:VARCHAR#, #toolsId:VARCHAR#, #parentToolsId:VARCHAR#, #leaf:INTEGER#,
      #productName:VARCHAR#, #contractAmount:DECIMAL#, #orderAmount:DECIMAL#, #productUnit:VARCHAR#,
      #price:DECIMAL#, #productMoney:DECIMAL#, #productBrand:VARCHAR#, #productCode:VARCHAR#,
       #contractProjectSortId:VARCHAR#, #proSortName:VARCHAR#, #projectCode:VARCHAR#, #serialNumber:DECIMAL#,#deliveryDate:VARCHAR#,#priceChange:INTEGER#)
  </insert>
  <insert id="ibatorgenerated_insertSelective" parameterClass="com.tl.resource.business.dto.OrderDetialsDto">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Oct 19 19:42:13 CST 2009.
    -->
    insert into t_order_detail
    <dynamic prepend="(">
      <isNotNull prepend="," property="id">
        id
      </isNotNull>
      <isNotNull prepend="," property="contractProductDetailId">
        contract_product_detail_id
      </isNotNull>
      <isNotNull prepend="," property="stockOrderInforId">
        stock_order_infor_id
      </isNotNull>
      <isNotNull prepend="," property="brandCode">
        brand_code
      </isNotNull>
      <isNotNull prepend="," property="toolsId">
        tools_id
      </isNotNull>
      <isNotNull prepend="," property="parentToolsId">
        parent_tools_id
      </isNotNull>
      <isNotNull prepend="," property="leaf">
        leaf
      </isNotNull>
      <isNotNull prepend="," property="productName">
        product_name
      </isNotNull>
      <isNotNull prepend="," property="contractAmount">
        contract_amount
      </isNotNull>
      <isNotNull prepend="," property="orderAmount">
        order_amount
      </isNotNull>
      <isNotNull prepend="," property="productUnit">
        product_unit
      </isNotNull>
      <isNotNull prepend="," property="price">
        price
      </isNotNull>
      <isNotNull prepend="," property="productMoney">
        product_money
      </isNotNull>
       <isNotNull prepend="," property="productBrand">
        product_brand
      </isNotNull>
       <isNotNull prepend="," property="productCode">
        product_code
      </isNotNull>
       <isNotNull prepend="," property="contractProjectSortId">
        contract_project_sort_id
      </isNotNull>
       <isNotNull prepend="," property="proSortName">
        pro_sort_name
      </isNotNull>
       <isNotNull prepend="," property="projectCode">
        project_code
      </isNotNull>
       <isNotNull prepend="," property="serialNumber">
        serial_number
      </isNotNull>
	  <isNotNull prepend="," property="deliveryDate">
        delivery_date
      </isNotNull>
	  <isNotNull prepend="," property="priceChange">
        price_change
      </isNotNull>
      )
    </dynamic>
    values
    <dynamic prepend="(">
      <isNotNull prepend="," property="id">
        #id:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="contractProductDetailId">
        #contractProductDetailId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="stockOrderInforId">
        #stockOrderInforId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="brandCode">
        #brandCode:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="toolsId">
        #toolsId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="parentToolsId">
        #parentToolsId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="leaf">
        #leaf:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="productName">
        #productName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="contractAmount">
        #contractAmount:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="orderAmount">
        #orderAmount:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="productUnit">
        #productUnit:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="price">
        #price:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="productMoney">
        #productMoney:DECIMAL#
      </isNotNull>
       <isNotNull prepend="," property="productBrand">
       #productBrand:VARCHAR#
      </isNotNull>
       <isNotNull prepend="," property="productCode">
        #productCode:VARCHAR#
      </isNotNull>
       <isNotNull prepend="," property="contractProjectSortId">
       #contractProjectSortId:VARCHAR#
      </isNotNull>
       <isNotNull prepend="," property="proSortName">
		#proSortName:VARCHAR#
      </isNotNull>
       <isNotNull prepend="," property="projectCode">
       #projectCode:VARCHAR#
      </isNotNull>
       <isNotNull prepend="," property="serialNumber">
       #serialNumber:DECIMAL#
      </isNotNull>
	  <isNotNull prepend="," property="deliveryDate">
       #deliveryDate:VARCHAR#
      </isNotNull>
	  <isNotNull prepend="," property="priceChange">
       #priceChange:INTEGER#
      </isNotNull>
      )
    </dynamic>
  </insert>
  <select id="ibatorgenerated_countByExample" parameterClass="com.tl.resource.dao.pojo.TOrderDetailExample" resultClass="java.lang.Integer">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Oct 19 19:42:13 CST 2009.
    -->
    select count(*) from t_order_detail
    <include refid="t_order_detail.ibatorgenerated_Example_Where_Clause" />
  </select>
  <update id="ibatorgenerated_updateByExampleSelective">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Oct 19 19:42:13 CST 2009.
    -->
    update t_order_detail
    <dynamic prepend="set">
      <isNotNull prepend="," property="record.id">
        id = #record.id:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.contractProductDetailId">
        contract_product_detail_id = #record.contractProductDetailId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.stockOrderInforId">
        stock_order_infor_id = #record.stockOrderInforId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.brandCode">
        brand_code = #record.brandCode:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.toolsId">
        tools_id = #record.toolsId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.parentToolsId">
        parent_tools_id = #record.parentToolsId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.leaf">
        leaf = #record.leaf:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.productName">
        product_name = #record.productName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.contractAmount">
        contract_amount = #record.contractAmount:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="record.orderAmount">
        order_amount = #record.orderAmount:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="record.productUnit">
        product_unit = #record.productUnit:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.price">
        price = #record.price:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="record.productMoney">
        product_money = #record.productMoney:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="record.productBrand">
        product_brand = #record.productBrand:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.productCode">
        product_code = #record.productCode:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.contractProjectSortId">
        contract_project_sort_id = #record.contractProjectSortId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.proSortName">
        pro_sort_name = #record.proSortName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.projectCode">
        project_code = #record.projectCode:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.serialNumber">
        serial_number = #record.serialNumber:DECIMAL#
      </isNotNull>
	  <isNotNull prepend="," property="record.deliveryDate">
        delivery_date = #record.deliveryDate:VARCHAR#
      </isNotNull>
	  <isNotNull prepend="," property="record.priceChange">
        price_change = #record.priceChange:INTEGER#
      </isNotNull>
    </dynamic>
    <isParameterPresent>
      <include refid="t_order_detail.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByExample">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Oct 19 19:42:13 CST 2009.
    -->
    update t_order_detail
    set id = #record.id:VARCHAR#,
      contract_product_detail_id = #record.contractProductDetailId:VARCHAR#,
      stock_order_infor_id = #record.stockOrderInforId:VARCHAR#,
      brand_code = #record.brandCode:VARCHAR#,
      tools_id = #record.toolsId:VARCHAR#,
      parent_tools_id = #record.parentToolsId:VARCHAR#,
      leaf = #record.leaf:INTEGER#,
      product_name = #record.productName:VARCHAR#,
      contract_amount = #record.contractAmount:DECIMAL#,
      order_amount = #record.orderAmount:DECIMAL#,
      product_unit = #record.productUnit:VARCHAR#,
      price = #record.price:DECIMAL#,
      product_money = #record.productMoney:DECIMAL#,
      product_brand = #record.productBrand:VARCHAR#,
      product_code = #record.productCode:VARCHAR#,
      contract_project_sort_id = #record.contractProjectSortId:VARCHAR#,
      pro_sort_name = #record.proSortName:VARCHAR#,
      project_code = #record.projectCode:VARCHAR#,
      serial_number = #record.serialNumber:DECIMAL#,
      delivery_date = #record.deliveryDate:VARCHAR#,
	  price_change = #record.priceChange:INTEGER#
    <isParameterPresent>
      <include refid="t_order_detail.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByPrimaryKeySelective" parameterClass="com.tl.resource.dao.pojo.TOrderDetail">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Oct 19 19:42:13 CST 2009.
    -->
    update t_order_detail
    <dynamic prepend="set">
      <isNotNull prepend="," property="contractProductDetailId">
        contract_product_detail_id = #contractProductDetailId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="stockOrderInforId">
        stock_order_infor_id = #stockOrderInforId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="brandCode">
        brand_code = #brandCode:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="toolsId">
        tools_id = #toolsId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="parentToolsId">
        parent_tools_id = #parentToolsId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="leaf">
        leaf = #leaf:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="productName">
        product_name = #productName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="contractAmount">
        contract_amount = #contractAmount:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="orderAmount">
        order_amount = #orderAmount:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="productUnit">
        product_unit = #productUnit:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="price">
        price = #price:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="productMoney">
        product_money = #productMoney:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="productBrand">
        product_brand = #productBrand:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="productCode">
        product_code = #productCode:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="contractProjectSortId">
        contract_project_sort_id = #contractProjectSortId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="proSortName">
        pro_sort_name = #proSortName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="projectCode">
        project_code = #projectCode:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="serialNumber">
        serial_number = #serialNumber:DECIMAL#
      </isNotNull>
	  <isNotNull prepend="," property="serialNumber">
        delivery_date = #deliveryDate:VARCHAR#
      </isNotNull>
	  <isNotNull prepend="," property="priceChange">
        price_change = #priceChange:INTEGER#
      </isNotNull>
    </dynamic>
    where id = #id:VARCHAR#
  </update>
  <update id="ibatorgenerated_updateByPrimaryKey" parameterClass="com.tl.resource.dao.pojo.TOrderDetail">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Oct 19 19:42:13 CST 2009.
    -->
    update t_order_detail
    set contract_product_detail_id = #contractProductDetailId:VARCHAR#,
      stock_order_infor_id = #stockOrderInforId:VARCHAR#,
      brand_code = #brandCode:VARCHAR#,
      tools_id = #toolsId:VARCHAR#,
      parent_tools_id = #parentToolsId:VARCHAR#,
      leaf = #leaf:INTEGER#,
      product_name = #productName:VARCHAR#,
      contract_amount = #contractAmount:DECIMAL#,
      order_amount = #orderAmount:DECIMAL#,
      product_unit = #productUnit:VARCHAR#,
      price = #price:DECIMAL#,
      product_money = #productMoney:DECIMAL#,
      product_brand = #productBrand:VARCHAR#,
      product_code = #productCode:VARCHAR#,
      contract_project_sort_id = #contractProjectSortId:VARCHAR#,
      pro_sort_name = #proSortName:VARCHAR#,
      project_code = #projectCode:VARCHAR#,
      serial_number = #serialNumber:DECIMAL#,
      delivery_date = #deliveryDate:VARCHAR#,
	  price_change = #priceChange:INTEGER#
    where id = #id:VARCHAR#
    
  </update>
  
  
  <!-- 订单详细 (合同订单)-->
   <select id="getCOrderOrderDetails" parameterClass="java.util.Map" resultClass="java.util.List" resultMap="resultMap">
     select d.id ,d.leaf,d.contract_product_detail_id ,d.stock_order_infor_id ,d.brand_code ,d.tools_id ,d.parent_tools_id ,
		d.product_name ,d.contract_amount,d.product_unit, d.price,d.order_amount,d.product_money,
      d.product_brand,d.product_code,d.contract_project_sort_id,d.pro_sort_name,d.project_code,d.serial_number,d.delivery_date,
		(c.amount - 
		(select sum(od.order_amount) from t_order_detail od where od.contract_product_detail_id = c.id and od.parent_tools_id = 'root') 
		-ifnull((select sum(s.amount) from t_out_stock_detail s,t_out_stock_infor ot 
			where s.contract_product_detail_id = c.id and ot.id = s.out_stock_infor_id and ot.out_stock_type = 1),0)
			-ifnull((select sum(p.order_amount) from t_order_detail p where CONCAT(p.contract_product_detail_id,&apos;##&apos;) = c.id),0)
		)as remain_amount,
		d.price_change
      from 
		t_order_detail d,
		t_contract_product_detail c
		where 
		d.stock_order_infor_id='$orderId$'
		and 
		d.parent_tools_id = 'root'
		and
		c.id = d.contract_product_detail_id
		order by d.serial_number ASC
       <isNotNull property="startIndex">
          limit $startIndex$,$pageSize$
      </isNotNull>
   </select>
   
    <!-- 订单详细 (储备订单) -->
 	<select id="getROrderDetailsList" parameterClass="java.util.Map" resultClass="java.util.List" resultMap="resultMap">
     select d.id ,d.leaf,d.contract_product_detail_id ,d.stock_order_infor_id ,d.brand_code ,d.tools_id ,d.parent_tools_id ,
		d.product_name ,d.contract_amount,d.product_unit, d.price,d.order_amount,d.product_money,
      d.product_brand,d.product_code,d.contract_project_sort_id,d.pro_sort_name,d.project_code,d.serial_number,d.delivery_date,
		0 remain_amount,d.price_change
      from 
		t_order_detail d
		where 
		d.stock_order_infor_id='$orderId$'
		and 
		d.parent_tools_id = 'root'
      <isNotNull property="startIndex">
          limit $startIndex$,$pageSize$
      </isNotNull>
   </select>
   
    <select id="getROrderDetailsListCount" parameterClass="java.util.Map" resultClass="java.lang.Integer">
     select count(d.id)
      from 
		t_order_detail d
		where 
		d.stock_order_infor_id='$orderId$'
		and 
		d.parent_tools_id = 'root'
   </select>
   
   
   <!-- 订单详细 (预定订单) -->
 	<select id="getSOrderDetailList" parameterClass="java.util.Map" resultClass="java.util.List" resultMap="resultMap">
    select d.id ,
     d.leaf
      ,d.contract_product_detail_id ,d.stock_order_infor_id ,d.brand_code ,d.tools_id ,d.parent_tools_id ,
		d.product_name ,d.contract_amount,d.product_unit, d.price,d.order_amount,d.product_money,
      d.product_brand,d.product_code,d.contract_project_sort_id,d.pro_sort_name,d.project_code,d.serial_number,d.delivery_date,
		(c.amount - 
		(select sum(od.order_amount) from t_order_detail od where od.contract_product_detail_id = c.id and od.parent_tools_id = 'root') 
		-ifnull((select sum(s.amount) from t_out_stock_detail s,t_out_stock_infor ot where s.contract_product_detail_id = c.id and ot.id = s.out_stock_infor_id and ot.out_stock_type = #outStockType:INTEGER#),0)
		)as remain_amount,
		(select ifnull(count(*),0) from t_accessories where business_id = d.tools_id and business_type = 1) as file_count,
		d.price_change
      from 
		t_order_detail d,
		t_quotation_product_detail c
		where 
		d.stock_order_infor_id='$orderId$'
		and 
		d.parent_tools_id = 'root'
		and
		c.id = d.contract_product_detail_id
		order by serial_number
      <isNotNull property="startIndex">
          limit $startIndex$,$pageSize$
      </isNotNull>
   </select>
    <!-- 订单详细数量 (预定订单) -->
    <select id="getSOrderDetailListCount" parameterClass="java.util.Map" resultClass="java.lang.Integer">
    select count(*)
      from 
		t_order_detail d,
		t_quotation_product_detail c
		where 
		d.stock_order_infor_id='$orderId$'
		and 
		d.parent_tools_id = 'root'
		and
		c.id = d.contract_product_detail_id
   </select>
   
   <delete id="deleteById" parameterClass="java.lang.String">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Mon Oct 19 19:42:13 CST 2009.
    -->
    delete from t_order_detail
    where id = #id:VARCHAR# or parent_tools_id = #id:VARCHAR#
  </delete>
  
   <!-- 订单详细 (预定加工订单) -->
 	<select id="getSSOrderDetailsList" parameterClass="java.util.Map" resultClass="java.util.List" resultMap="resultHasReserve">
    select d.id ,
     d.leaf
      ,d.contract_product_detail_id ,d.stock_order_infor_id ,d.brand_code ,d.tools_id ,d.parent_tools_id ,
		d.product_name ,d.contract_amount,d.product_unit, d.price,d.order_amount,d.product_money,
      d.product_brand,d.product_code,d.contract_project_sort_id,d.pro_sort_name,d.project_code,d.serial_number,d.delivery_date,
		(c.amount - 
		(select sum(od.order_amount) from t_order_detail od where od.contract_product_detail_id = c.id and od.parent_tools_id = 'root') 
		-ifnull((select sum(s.amount) from t_out_stock_detail s,t_out_stock_infor ot 
			where s.contract_product_detail_id = c.id and ot.id = s.out_stock_infor_id and ot.out_stock_type = #outStockType:INTEGER#),0)
		)as remain_amount,0 reserve_amount,0 plan_amount,
		(select ifnull(count(*),0) from t_accessories where business_id = d.tools_id and business_type = 1) as file_count,
		d.price_change
      from 
		t_order_detail d,
		t_quotation_product_detail c
		where d.stock_order_infor_id='$orderId$'
		and d.parent_tools_id = 'root'
		and c.id = d.contract_product_detail_id
      <isNotNull property="startIndex">
          limit $startIndex$,$pageSize$
      </isNotNull>
   </select>
    <!-- 订单详细数量 (预定加工订单) -->
    <select id="getSSOrderDetailsListCount" parameterClass="java.util.Map" resultClass="java.lang.Integer">
    select count(*)
      from 
		t_order_detail d,
		t_quotation_product_detail c 
		where d.stock_order_infor_id='$orderId$'
		and d.parent_tools_id = 'root'
		and c.id = d.contract_product_detail_id
   </select>
   
   <!-- 合同订单 订单编制界面合同详细 产品列表 -->
   <select id="selectOrderDetailFromContract" parameterClass="java.util.Map" resultClass="java.util.List" resultMap="resultMap">
   	select '' as id,'' as stock_order_infor_id, ss.history_price * (1-((ifnull(re.rebate,0)/100))) price,ss.id as contract_product_detail_id,
	ss.brand_code as brand_code,ss.tools_id as tools_id,ss.parent_tools_id as parent_tools_id,
	ss.leaf as leaf,ss.product_name as product_name,ss.amount as contract_amount,
	0 as order_amount,ss.product_unit as product_unit,0 as product_money,ss.product_brand as product_brand,
	ss.product_code as product_code,ss.contract_project_sort_id as contract_project_sort_id,
	ss.pro_sort_name as pro_sort_name,ss.project_code as project_code,ss.serial_number as serial_number,
	'' as delivery_date,ss.remain_amount as remain_amount,0 price_change from 
	(
		select i.*,ifnull(his.history_price,0) history_price from 
		( 
		select * from (
		select 
			nn.*,pd.order_price_run_date,nc.product_sort_id product_sort_id,
		(nn.amount-ifnull((select sum(o.order_amount) from t_order_detail o where o.contract_product_detail_id = nn.id),0)-ifnull((select sum(s.amount) from t_out_stock_detail s,t_out_stock_infor ot 
			where s.contract_product_detail_id = nn.id and ot.id = s.out_stock_infor_id and ot.out_stock_type = 1 AND ot.status != 2 ),0)
			-ifnull((select sum(p.order_amount) from t_order_detail p where CONCAT(p.contract_product_detail_id,&apos;##&apos;) = nn.id),0)
						) as remain_amount,
	0 order_amount,(select pro_sort_name from t_contract_project_sort_infor where id = nn.contract_project_sort_id) as pro_sort_name,
	(select ifnull(count(*),0) from t_accessories where business_id = nn.tools_id and business_type = 1) as file_count
			from 
				t_contract_product_detail nn,
				t_product_tools_infor nc,
				t_suppliers_brand b,
				t_product_brand pd
				where b.t_suppliers_id = #supplierId:VARCHAR#
				and nn.contract_infor_id = (select id from t_contract_infor where contract_code = #contractCode:VARCHAR#)
				and nn.parent_tools_id = 'root'         
				and nn.product_brand = b.brand
				and nn.tools_id = nc.id
				and nc.product_brand = pd.name 
				<isNotEmpty property="productBrand" prepend="and">
			      <![CDATA[ nn.product_brand like '%$productBrand$%' ]]>
			    </isNotEmpty>
				<isNotEmpty property="brandCode" prepend="and">
			      <![CDATA[ nn.brand_code like '%$brandCode$%' ]]>
			    </isNotEmpty>
			    <isNotEmpty property="productName" prepend="and">
			      <![CDATA[ nn.product_name like '%$productName$%' ]]>
			    </isNotEmpty>
			    <isNotEmpty property="contractProjectSortId" prepend="and">
			      <![CDATA[ nn.contract_project_sort_id = #contractProjectSortId# ]]>
			    </isNotEmpty>
			) m
			where	m.remain_amount > 0
			 <isNotNull prepend="" property="startIndex">
			         limit #startIndex:INTEGER#,#pageSize:INTEGER#
			  </isNotNull>
		) i left join 
		t_sales_price_history his
		on i.tools_id = his.product_tool_infor_id
		and i.order_price_run_date = his.sale_price_date
		) ss left join 
		t_rebate re 
		on re.product_sort_id = ss.product_sort_id
		and re.customers_degree_id = 'xxx'
		order by contract_project_sort_id, serial_number
   </select>
   
   <!-- 合同订单 订单编制界面合同详细数量 产品列表 -->
   <select id="selectOrderDetailCountFromContract" parameterClass="java.util.Map" resultClass="java.lang.Integer">
   	select count(*) from
	(
		select i.*,ifnull(his.history_price,0) history_price from 
		( 
		select * from (
		select 
			nn.*,pd.order_price_run_date,nc.product_sort_id product_sort_id,
		(nn.amount-ifnull((select sum(o.order_amount) from t_order_detail o where o.contract_product_detail_id = nn.id),0)-ifnull((select sum(s.amount) from t_out_stock_detail s,t_out_stock_infor ot 
			where s.contract_product_detail_id = nn.id
			and ot.id = s.out_stock_infor_id
			and ot.out_stock_type = 1),0)) as remain_amount,
		0 order_amount,(select pro_sort_name from t_contract_project_sort_infor where id = nn.contract_project_sort_id) as pro_sort_name,
		(select ifnull(count(*),0) from t_accessories where business_id = nn.tools_id and business_type = 1) as file_count
			from 
				t_contract_product_detail nn,
				t_product_tools_infor nc,
				t_suppliers_brand b,
				t_product_brand pd
				where b.t_suppliers_id = #supplierId:VARCHAR#
				and nn.contract_infor_id = (select id from t_contract_infor where contract_code = #contractCode:VARCHAR#)
				and nn.parent_tools_id = 'root'         
				and nn.product_brand = b.brand
				and nn.tools_id = nc.id
				and nc.product_brand = pd.name 
				<isNotEmpty property="productBrand" prepend="and">
			      <![CDATA[ nn.product_brand like '%$productBrand$%' ]]>
			    </isNotEmpty>
				<isNotEmpty property="brandCode" prepend="and">
			      <![CDATA[ nn.brand_code like '%$brandCode$%' ]]>
			    </isNotEmpty>
			    <isNotEmpty property="productName" prepend="and">
			      <![CDATA[ nn.product_name like '%$productName$%' ]]>
			    </isNotEmpty>
			    <isNotEmpty property="contractProjectSortId" prepend="and">
			      <![CDATA[ nn.contract_project_sort_id = #contractProjectSortId# ]]>
			    </isNotEmpty>
			) m
			where	m.remain_amount > 0
		) i left join 
		t_sales_price_history his
		on i.tools_id = his.product_tool_infor_id
		and i.order_price_run_date = his.sale_price_date
		) ss left join 
		t_rebate re 
		on re.product_sort_id = ss.product_sort_id
		and re.customers_degree_id = 'xxx'
   </select>
   
  <select id="getOrderDetailById" parameterClass="java.lang.String" resultClass="java.util.List" resultMap="result">
  		select t.*,0 as  remain_amount,0 as file_count from t_order_detail t where contract_product_detail_id = #value#
  </select>
  
  
  <select id="cmprStockPrice" parameterClass="java.util.Map" resultClass="java.util.List" resultMap="ibatorgenerated_BaseResultMap">
  		<isEqual property="conType" compareValue="quotation" prepend="">
			SELECT doi.id,det.contract_product_detail_id,det.stock_order_infor_id,det.brand_code,
			det.tools_id,det.parent_tools_id,det.leaf,det.product_name,det.contract_amount,det.order_amount,
			det.product_unit,det.product_money,det.product_code,det.contract_project_sort_id,
			det.pro_sort_name,det.project_code,det.serial_number,det.product_brand,
			det.delivery_date,det.price_change,det.price*ter.rate AS price,det.price_change
			FROM t_order_detail det,
			t_order_infor doi,
			t_exchange_rate ter,
			t_quotation_product_detail qpd,
			t_quotation_infor tqi,
			t_exchange_rate ter1
			WHERE det.stock_order_infor_id = doi.id
			AND doi.currency_id = ter.id
			AND doi.id =#orderInforId#
			AND det.parent_tools_id = 'root'
			AND det.price > 0
			AND det.contract_product_detail_id = qpd.id
			AND qpd.quotation_infor_id = tqi.id
			AND tqi.currency_ = ter1.id
			AND qpd.net_price > 0
			AND det.price*ter.rate >= qpd.net_price * ter1.rate
  		</isEqual>
  		<isEqual property="conType" compareValue="contract" prepend="">
			SELECT doi.id,det.contract_product_detail_id,det.stock_order_infor_id,det.brand_code,
			det.tools_id,det.parent_tools_id,det.leaf,det.product_name,det.contract_amount,det.order_amount,
			det.product_unit,det.product_money,det.product_code,det.contract_project_sort_id,
			det.pro_sort_name,det.project_code,det.serial_number,det.product_brand,det.delivery_date,
			det.price_change,det.price*ter.rate AS price,det.price_change
			FROM t_order_detail det,
			t_order_infor doi,
			t_exchange_rate ter,
			t_contract_product_detail qpd,
			t_contract_infor tqi,
			t_exchange_rate ter1
			WHERE det.stock_order_infor_id = doi.id
			AND doi.currency_id = ter.id
			AND doi.id =#orderInforId#
			AND det.parent_tools_id = 'root'
			AND det.price > 0
			AND det.contract_product_detail_id = qpd.id
			AND qpd.contract_infor_id = tqi.id
			AND tqi.currency_id = ter1.id
			AND qpd.net_price > 0
			AND det.price*ter.rate >= qpd.net_price * ter1.rate
  		</isEqual>
  </select>
</sqlMap>