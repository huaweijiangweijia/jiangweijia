package com.tl.resource.dao;

import com.tl.resource.business.dto.TreeDto;
import com.tl.resource.dao.pojo.TProductBrand;
import com.tl.resource.dao.pojo.TProductBrandExample;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class TProductBrandDAOImpl extends SqlMapClientDaoSupport implements TProductBrandDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_product_brand
     *
     * @ibatorgenerated Wed Nov 25 18:10:59 CST 2009
     */
    public TProductBrandDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_product_brand
     *
     * @ibatorgenerated Wed Nov 25 18:10:59 CST 2009
     */
    public int countByExample(TProductBrandExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("t_product_brand.ibatorgenerated_countByExample", example);
        return count.intValue();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_product_brand
     *
     * @ibatorgenerated Wed Nov 25 18:10:59 CST 2009
     */
    public int deleteByExample(TProductBrandExample example) {
        int rows = getSqlMapClientTemplate().delete("t_product_brand.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_product_brand
     *
     * @ibatorgenerated Wed Nov 25 18:10:59 CST 2009
     */
    public int deleteByPrimaryKey(String id) {
        TProductBrand key = new TProductBrand();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("t_product_brand.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_product_brand
     *
     * @ibatorgenerated Wed Nov 25 18:10:59 CST 2009
     */
    public void insert(TProductBrand record) {
        getSqlMapClientTemplate().insert("t_product_brand.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_product_brand
     *
     * @ibatorgenerated Wed Nov 25 18:10:59 CST 2009
     */
    public void insertSelective(TProductBrand record) {
        getSqlMapClientTemplate().insert("t_product_brand.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_product_brand
     *
     * @ibatorgenerated Wed Nov 25 18:10:59 CST 2009
     */
    public List selectByExample(TProductBrandExample example) {
        List list = getSqlMapClientTemplate().queryForList("t_product_brand.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_product_brand
     *
     * @ibatorgenerated Wed Nov 25 18:10:59 CST 2009
     */
    public TProductBrand selectByPrimaryKey(String id) {
        TProductBrand key = new TProductBrand();
        key.setId(id);
        TProductBrand record = (TProductBrand) getSqlMapClientTemplate().queryForObject("t_product_brand.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_product_brand
     *
     * @ibatorgenerated Wed Nov 25 18:10:59 CST 2009
     */
    public int updateByExampleSelective(TProductBrand record, TProductBrandExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("t_product_brand.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_product_brand
     *
     * @ibatorgenerated Wed Nov 25 18:10:59 CST 2009
     */
    public int updateByExample(TProductBrand record, TProductBrandExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("t_product_brand.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_product_brand
     *
     * @ibatorgenerated Wed Nov 25 18:10:59 CST 2009
     */
    public int updateByPrimaryKeySelective(TProductBrand record) {
        int rows = getSqlMapClientTemplate().update("t_product_brand.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_product_brand
     *
     * @ibatorgenerated Wed Nov 25 18:10:59 CST 2009
     */
    public int updateByPrimaryKey(TProductBrand record) {
        int rows = getSqlMapClientTemplate().update("t_product_brand.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table t_product_brand
     *
     * @ibatorgenerated Wed Nov 25 18:10:59 CST 2009
     */
    private static class UpdateByExampleParms extends TProductBrandExample {
        private Object record;

        public UpdateByExampleParms(Object record, TProductBrandExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }

	@Override
	public List<TProductBrand> getProBrandByName(String name) {
		return this.getSqlMapClientTemplate().queryForList("t_product_brand.getProBrandByName", name);
	}

	@Override
	public List<TProductBrand> getProBrandBySorce(String sourceName) {
		return this.getSqlMapClientTemplate().queryForList("t_product_brand.getProBrandBySource", sourceName);
	}

	@Override
	public List<TProductBrand> getProductBrand(Map<String, Object> parmMap) {
		return this.getSqlMapClientTemplate().queryForList("t_product_brand.getProductBrandByPage", parmMap);
	}

	@Override
	public Integer getProductBrandTotal(Map<String, Object> parmMap) {
		return (Integer)this.getSqlMapClientTemplate().queryForObject("t_product_brand.getProductBrandTotal", parmMap);
	}

	@Override
	public List<TProductBrand> getRunData(Map<String, Object> paramMap) {
		return this.getSqlMapClientTemplate().queryForList("t_product_brand.getRunData", paramMap);
	}

	@Override
	public List<TProductBrand> getProductBrankList(Map<String, Object> parmMap) {
		return this.getSqlMapClientTemplate().queryForList("t_product_brand.getProductBrankList", parmMap);
	}

	@Override
	public List<TProductBrand> getBrand4import(TreeDto treeDto) {
		return this.getSqlMapClientTemplate().queryForList("t_product_brand.getBrand4import", treeDto);
	}

	@Override
	public void updateToolsByBrand(Map<String, Object> parmMap) {
		this.getSqlMapClientTemplate().update("t_product_brand.updateToolsByBrand", parmMap);
	}
}