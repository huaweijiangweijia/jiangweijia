package com.tl.resource.dao;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.SqlMapClientCallback;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.ibatis.sqlmap.client.SqlMapExecutor;
import com.tl.resource.business.dto.ImportSalesPriceDto;
import com.tl.resource.business.dto.SalesPriceHistoryDto;
import com.tl.resource.business.dto.SalesPriceHistoryProDto;
import com.tl.resource.dao.pojo.TCusSalesPriceHistory;
import com.tl.resource.dao.pojo.TSalesPriceHistory;
import com.tl.resource.dao.pojo.TSalesPriceHistoryExample;

public class TSalesPriceHistoryDAOImpl extends SqlMapClientDaoSupport implements
		TSalesPriceHistoryDAO {

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table t_sales_price_history
	 * 
	 * @ibatorgenerated Fri Oct 16 10:53:03 CST 2009
	 */
	public TSalesPriceHistoryDAOImpl() {
		super();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table t_sales_price_history
	 * 
	 * @ibatorgenerated Fri Oct 16 10:53:03 CST 2009
	 */
	public int countByExample(TSalesPriceHistoryExample example) {
		Integer count = (Integer) getSqlMapClientTemplate()
				.queryForObject(
						"t_sales_price_history.ibatorgenerated_countByExample",
						example);
		return count.intValue();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table t_sales_price_history
	 * 
	 * @ibatorgenerated Fri Oct 16 10:53:03 CST 2009
	 */
	public int deleteByExample(TSalesPriceHistoryExample example) {
		int rows = getSqlMapClientTemplate().delete(
				"t_sales_price_history.ibatorgenerated_deleteByExample",
				example);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table t_sales_price_history
	 * 
	 * @ibatorgenerated Fri Oct 16 10:53:03 CST 2009
	 */
	public int deleteByPrimaryKey(String id) {
		TSalesPriceHistory key = new TSalesPriceHistory();
		key.setId(id);
		int rows = getSqlMapClientTemplate()
				.delete(
						"t_sales_price_history.ibatorgenerated_deleteByPrimaryKey",
						key);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table t_sales_price_history
	 * 
	 * @ibatorgenerated Fri Oct 16 10:53:03 CST 2009
	 */
	public void insert(TSalesPriceHistory record) {
		getSqlMapClientTemplate().insert(
				"t_sales_price_history.ibatorgenerated_insert", record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table t_sales_price_history
	 * 
	 * @ibatorgenerated Fri Oct 16 10:53:03 CST 2009
	 */
	public void insertSelective(TSalesPriceHistory record) {
		getSqlMapClientTemplate()
				.insert(
						"t_sales_price_history.ibatorgenerated_insertSelective",
						record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table t_sales_price_history
	 * 
	 * @ibatorgenerated Fri Oct 16 10:53:03 CST 2009
	 */
	public List selectByExample(TSalesPriceHistoryExample example) {
		List list = getSqlMapClientTemplate().queryForList(
				"t_sales_price_history.ibatorgenerated_selectByExample",
				example);
		return list;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table t_sales_price_history
	 * 
	 * @ibatorgenerated Fri Oct 16 10:53:03 CST 2009
	 */
	public TSalesPriceHistory selectByPrimaryKey(String id) {
		TSalesPriceHistory key = new TSalesPriceHistory();
		key.setId(id);
		TSalesPriceHistory record = (TSalesPriceHistory) getSqlMapClientTemplate()
				.queryForObject(
						"t_sales_price_history.ibatorgenerated_selectByPrimaryKey",
						key);
		return record;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table t_sales_price_history
	 * 
	 * @ibatorgenerated Fri Oct 16 10:53:03 CST 2009
	 */
	public int updateByExampleSelective(TSalesPriceHistory record,
			TSalesPriceHistoryExample example) {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate()
				.update(
						"t_sales_price_history.ibatorgenerated_updateByExampleSelective",
						parms);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table t_sales_price_history
	 * 
	 * @ibatorgenerated Fri Oct 16 10:53:03 CST 2009
	 */
	public int updateByExample(TSalesPriceHistory record,
			TSalesPriceHistoryExample example) {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate().update(
				"t_sales_price_history.ibatorgenerated_updateByExample", parms);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table t_sales_price_history
	 * 
	 * @ibatorgenerated Fri Oct 16 10:53:03 CST 2009
	 */
	public int updateByPrimaryKeySelective(TSalesPriceHistory record) {
		int rows = getSqlMapClientTemplate()
				.update(
						"t_sales_price_history.ibatorgenerated_updateByPrimaryKeySelective",
						record);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table t_sales_price_history
	 * 
	 * @ibatorgenerated Fri Oct 16 10:53:03 CST 2009
	 */
	public int updateByPrimaryKey(TSalesPriceHistory record) {
		int rows = getSqlMapClientTemplate().update(
				"t_sales_price_history.ibatorgenerated_updateByPrimaryKey",
				record);
		return rows;
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds
	 * to the database table t_sales_price_history
	 * 
	 * @ibatorgenerated Fri Oct 16 10:53:03 CST 2009
	 */
	private static class UpdateByExampleParms extends TSalesPriceHistoryExample {
		private Object record;

		public UpdateByExampleParms(Object record,
				TSalesPriceHistoryExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}

	@Override
	public List<TCusSalesPriceHistory> getPriceHistoryByCustomer(
			Map<String, String> paramMap) {
		return this.getSqlMapClientTemplate().queryForList(
				"t_cus_sales_price_history.getHistoryPrice", paramMap);
	}

	@Override
	public List<SalesPriceHistoryDto> getSalesPriHistory(
			Map<String, String> paramMap) {
		return this.getSqlMapClientTemplate().queryForList(
				"salPriceHistory.getSalesPriHistory", paramMap);
	}

	@Override
	public List<SalesPriceHistoryProDto> getSalesHistoryProductByPageAndProductId(
			Map<String, Object> parmMap) {
		List list = getSqlMapClientTemplate().queryForList(
				"salesPriceHistoryProDto.getSalesHistoryProductByPageAndProductId",
				parmMap);
		return list;
	}

	@Override
	public int getSalesHistoryProductTotalByProductId(
			Map<String, Object> parmMap) {
		Integer count = (Integer) getSqlMapClientTemplate()	.queryForObject(
						"salesPriceHistoryProDto.getSalesHistoryProductTotalByProductId",
						parmMap);
		return count.intValue();
	}

	@Override
	public List getHistoryYear(String productBrand) {
		HashMap hm = new HashMap();
		hm.put("productBrand", productBrand);
		List list = this.getSqlMapClientTemplate().queryForList("t_sales_price_history.getHistoryYear",hm);
		return list;
	}

	@Override
	public boolean batchInsertSalePri(final List<ImportSalesPriceDto> insertSalePriHis) {
		 final boolean  state = true;
		 //System.out.println( java.util.Calendar.getInstance().getTime());
		 this.getSqlMapClientTemplate().execute(new SqlMapClientCallback(){ 
			    public Object doInSqlMapClient(SqlMapExecutor executor) 
			            throws SQLException { 
				    executor.startBatch(); 
				    int batch = 0;
				   
				 
				  //  System.out.println(insertSalePriHis.size() + "@@@@@@@@@@@@");
				    
				    for(ImportSalesPriceDto tsph:insertSalePriHis){ 
					     //参数1为：ibatis中需要执行的语句的id 
					    executor.insert("t_sales_price_history.insertTempDate", tsph); 
					    batch++; 
					    //每500条批量提交一次。 
					    if(batch==400){ 
						    executor.executeBatch(); 
						    batch = 0; 
					    } 
				    } 
					    executor.executeBatch();
					    return false;
				    } 
			    }); 
	   // System.out.println( java.util.Calendar.getInstance().getTime());
		return state;
	}
	
	@Override
	public void replaceDollar() {
		// TODO Auto-generated method stub
		this.getSqlMapClientTemplate().update("t_sales_price_history.replaceDollar");
	}
	
	@Override
	public void deleteSpace() {
		// TODO Auto-generated method stub
		this.getSqlMapClientTemplate().update("t_sales_price_history.deleteSpace");
	}

	@Override
	public List<ImportSalesPriceDto> checkReptnForTempDate() {
		// TODO Auto-generated method stub
		return this.getSqlMapClientTemplate().queryForList("t_sales_price_history.checkReptnForTempDate");
	}
	
	@Override
	public void updateReptnForTempDate(Map<String, Object> parmMap) {
		// TODO Auto-generated method stub
		 this.getSqlMapClientTemplate().update("t_sales_price_history.updateReptnForTempDate",parmMap);
	}

	@Override
	public List<ImportSalesPriceDto> checkExistForTempDate() {
		// TODO Auto-generated method stub
		return this.getSqlMapClientTemplate().queryForList("t_sales_price_history.checkExistForTempDate");
	}
	
	@Override
	public void updateExistForTempDate(Map<String, Object> parmMap) {
		// TODO Auto-generated method stub
		this.getSqlMapClientTemplate().update("t_sales_price_history.updateExistForTempDate",parmMap);
	}

	@Override
	public List<ImportSalesPriceDto> seleteFlagEqualsThree() {
		// TODO Auto-generated method stub
		return this.getSqlMapClientTemplate().queryForList("t_sales_price_history.seleteFlagEqualsThree");
	}

	@Override
	public List<ImportSalesPriceDto> seleteFlagEqualsTow() {
		// TODO Auto-generated method stub
		return this.getSqlMapClientTemplate().queryForList("t_sales_price_history.seleteFlagEqualsTow");
	}

	@Override
	public void updateSalePrice() {
		// TODO Auto-generated method stub
		this.getSqlMapClientTemplate().update("t_sales_price_history.updateSalePrice");
	}

	@Override
	public void deleteTempDate() {
		// TODO Auto-generated method stub
		this.getSqlMapClientTemplate().delete("t_sales_price_history.deleteTempDate");
	}
	

	@Override
	public void insertSalePriceHistory() {
		// TODO Auto-generated method stub
		this.getSqlMapClientTemplate().insert("t_sales_price_history.insertSalePriceHistory");
	}
	

	@Override
	public boolean loadSalePriceDateFile(String datefilepath) {
		
		this.getSqlMapClientTemplate().insert("t_sales_price_history.loadSalePriceDateFile",datefilepath);
		
		return true;
	}

	@Override
	public List<SalesPriceHistoryProDto> getHistoryPriceByToolsId(String toolsId) {
		return this.getSqlMapClientTemplate().queryForList("salesPriceHistoryProDto.getHistoryPriceByToolsId", toolsId);
	}

	@Override
	public List<TSalesPriceHistory> getHistoryMarketPrice(
			Map<String, Object> parmMap) {
		// TODO Auto-generated method stub
		return this.getSqlMapClientTemplate().queryForList("t_sales_price_history.getHistoryMarketPrice", parmMap);
	}
	
	
}