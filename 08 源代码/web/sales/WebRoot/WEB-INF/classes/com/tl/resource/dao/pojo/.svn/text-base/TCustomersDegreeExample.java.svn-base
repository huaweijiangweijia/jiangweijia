package com.tl.resource.dao.pojo;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TCustomersDegreeExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table t_customers_degree
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table t_customers_degree
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_customers_degree
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public TCustomersDegreeExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_customers_degree
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	protected TCustomersDegreeExample(TCustomersDegreeExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_customers_degree
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_customers_degree
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_customers_degree
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_customers_degree
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_customers_degree
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_customers_degree
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_customers_degree
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table t_customers_degree
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(String value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(String value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(String value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(String value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(String value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(String value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdLike(String value) {
			addCriterion("id like", value, "id");
			return this;
		}

		public Criteria andIdNotLike(String value) {
			addCriterion("id not like", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(String value1, String value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(String value1, String value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andDegreeCodeIsNull() {
			addCriterion("degree_code is null");
			return this;
		}

		public Criteria andDegreeCodeIsNotNull() {
			addCriterion("degree_code is not null");
			return this;
		}

		public Criteria andDegreeCodeEqualTo(String value) {
			addCriterion("degree_code =", value, "degreeCode");
			return this;
		}

		public Criteria andDegreeCodeNotEqualTo(String value) {
			addCriterion("degree_code <>", value, "degreeCode");
			return this;
		}

		public Criteria andDegreeCodeGreaterThan(String value) {
			addCriterion("degree_code >", value, "degreeCode");
			return this;
		}

		public Criteria andDegreeCodeGreaterThanOrEqualTo(String value) {
			addCriterion("degree_code >=", value, "degreeCode");
			return this;
		}

		public Criteria andDegreeCodeLessThan(String value) {
			addCriterion("degree_code <", value, "degreeCode");
			return this;
		}

		public Criteria andDegreeCodeLessThanOrEqualTo(String value) {
			addCriterion("degree_code <=", value, "degreeCode");
			return this;
		}

		public Criteria andDegreeCodeLike(String value) {
			addCriterion("degree_code like", value, "degreeCode");
			return this;
		}

		public Criteria andDegreeCodeNotLike(String value) {
			addCriterion("degree_code not like", value, "degreeCode");
			return this;
		}

		public Criteria andDegreeCodeIn(List values) {
			addCriterion("degree_code in", values, "degreeCode");
			return this;
		}

		public Criteria andDegreeCodeNotIn(List values) {
			addCriterion("degree_code not in", values, "degreeCode");
			return this;
		}

		public Criteria andDegreeCodeBetween(String value1, String value2) {
			addCriterion("degree_code between", value1, value2, "degreeCode");
			return this;
		}

		public Criteria andDegreeCodeNotBetween(String value1, String value2) {
			addCriterion("degree_code not between", value1, value2,
					"degreeCode");
			return this;
		}

		public Criteria andDegreeNameIsNull() {
			addCriterion("degree_name is null");
			return this;
		}

		public Criteria andDegreeNameIsNotNull() {
			addCriterion("degree_name is not null");
			return this;
		}

		public Criteria andDegreeNameEqualTo(String value) {
			addCriterion("degree_name =", value, "degreeName");
			return this;
		}

		public Criteria andDegreeNameNotEqualTo(String value) {
			addCriterion("degree_name <>", value, "degreeName");
			return this;
		}

		public Criteria andDegreeNameGreaterThan(String value) {
			addCriterion("degree_name >", value, "degreeName");
			return this;
		}

		public Criteria andDegreeNameGreaterThanOrEqualTo(String value) {
			addCriterion("degree_name >=", value, "degreeName");
			return this;
		}

		public Criteria andDegreeNameLessThan(String value) {
			addCriterion("degree_name <", value, "degreeName");
			return this;
		}

		public Criteria andDegreeNameLessThanOrEqualTo(String value) {
			addCriterion("degree_name <=", value, "degreeName");
			return this;
		}

		public Criteria andDegreeNameLike(String value) {
			addCriterion("degree_name like", value, "degreeName");
			return this;
		}

		public Criteria andDegreeNameNotLike(String value) {
			addCriterion("degree_name not like", value, "degreeName");
			return this;
		}

		public Criteria andDegreeNameIn(List values) {
			addCriterion("degree_name in", values, "degreeName");
			return this;
		}

		public Criteria andDegreeNameNotIn(List values) {
			addCriterion("degree_name not in", values, "degreeName");
			return this;
		}

		public Criteria andDegreeNameBetween(String value1, String value2) {
			addCriterion("degree_name between", value1, value2, "degreeName");
			return this;
		}

		public Criteria andDegreeNameNotBetween(String value1, String value2) {
			addCriterion("degree_name not between", value1, value2,
					"degreeName");
			return this;
		}
	}
}