package com.tl.resource.dao;

import com.tl.common.util.PaginationSupport;
import com.tl.resource.business.dto.RolesDto;
import com.tl.resource.dao.pojo.TUserInfor;
import com.tl.resource.dao.pojo.TUserInforExample;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class TUserInforDAOImpl extends SqlMapClientDaoSupport implements TUserInforDAO {

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_user_infor
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public TUserInforDAOImpl() {
		super();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_user_infor
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public int countByExample(TUserInforExample example) {
		Integer count = (Integer) getSqlMapClientTemplate().queryForObject(
				"t_user_infor.ibatorgenerated_countByExample", example);
		return count.intValue();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_user_infor
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public int deleteByExample(TUserInforExample example) {
		int rows = getSqlMapClientTemplate().delete(
				"t_user_infor.ibatorgenerated_deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_user_infor
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public int deleteByPrimaryKey(String id) {
		TUserInfor key = new TUserInfor();
		key.setId(id);
		int rows = getSqlMapClientTemplate().delete(
				"t_user_infor.ibatorgenerated_deleteByPrimaryKey", key);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_user_infor
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public void insert(TUserInfor record) {
		getSqlMapClientTemplate().insert("t_user_infor.ibatorgenerated_insert",
				record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_user_infor
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public void insertSelective(TUserInfor record) {
		getSqlMapClientTemplate().insert(
				"t_user_infor.ibatorgenerated_insertSelective", record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_user_infor
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public List selectByExample(TUserInforExample example) {
		List list = getSqlMapClientTemplate().queryForList(
				"t_user_infor.ibatorgenerated_selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_user_infor
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public TUserInfor selectByPrimaryKey(String id) {
		TUserInfor key = new TUserInfor();
		key.setId(id);
		TUserInfor record = (TUserInfor) getSqlMapClientTemplate()
				.queryForObject(
						"t_user_infor.ibatorgenerated_selectByPrimaryKey", key);
		return record;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_user_infor
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public int updateByExampleSelective(TUserInfor record,
			TUserInforExample example) {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate().update(
				"t_user_infor.ibatorgenerated_updateByExampleSelective", parms);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_user_infor
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public int updateByExample(TUserInfor record, TUserInforExample example) {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate().update(
				"t_user_infor.ibatorgenerated_updateByExample", parms);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_user_infor
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public int updateByPrimaryKeySelective(TUserInfor record) {
		int rows = getSqlMapClientTemplate().update(
				"t_user_infor.ibatorgenerated_updateByPrimaryKeySelective",
				record);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_user_infor
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	public int updateByPrimaryKey(TUserInfor record) {
		int rows = getSqlMapClientTemplate().update(
				"t_user_infor.ibatorgenerated_updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table t_user_infor
	 * @ibatorgenerated  Wed Oct 14 14:13:27 CST 2009
	 */
	private static class UpdateByExampleParms extends TUserInforExample {
		private Object record;

		public UpdateByExampleParms(Object record, TUserInforExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}

	@Override
	public List<RolesDto> getUserRoles(String userId) {
		// TODO Auto-generated method stub
		return getSqlMapClientTemplate().queryForList("t_user_infor.getUserRoles",userId);
	}

	@Override
	public List<TUserInfor> getSelectedUser(Map<String, Object> params) {
		
		return getSqlMapClientTemplate().queryForList("t_user_infor.getSelectedUser",params);
	}

	@Override
	public PaginationSupport getWillSelectUser(Map<String, Object> params, int startIndex, int pageSize) {
		params.put("startIndex", startIndex);
		params.put("pageSize", pageSize);
		List list = getSqlMapClientTemplate().queryForList("t_user_infor.getWillSelectUser",params);
		Integer count = (Integer) getSqlMapClientTemplate().queryForObject("t_user_infor.getWillSelectUserCount", params);
		PaginationSupport ps = new PaginationSupport(list,count, pageSize, startIndex);
		return ps;
	}

	
}